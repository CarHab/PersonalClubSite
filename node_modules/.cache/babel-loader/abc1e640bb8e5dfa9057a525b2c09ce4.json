{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/src/pages/blockAluno.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MUIDataTable from 'mui-datatables';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport history from '../util/history';\nimport CustomToolbarSelect from '../components/CustomToolbarSelect';\nconst columns = [{\n  name: 'nome',\n  label: 'Nome',\n  options: {\n    filter: true,\n    sort: true\n  }\n}, {\n  name: 'matricula',\n  label: 'Matricula',\n  options: {\n    filter: true,\n    sort: true\n  }\n}, {\n  name: 'cpf',\n  label: 'CPF',\n  options: {\n    filter: true,\n    sort: true\n  }\n}, {\n  name: 'sexo',\n  label: 'Sexo',\n  options: {\n    filter: true,\n    sort: true\n  }\n}, {\n  name: 'status',\n  label: 'Status',\n  options: {\n    filter: true,\n    sort: true\n  }\n}, {\n  name: 'id',\n  label: 'Id',\n  options: {\n    filter: true,\n    sort: true,\n    display: false\n  }\n}];\nlet data = [];\n\nclass blockAluno extends Component {\n  constructor() {\n    super();\n\n    this.flushRowsSelected = () => {\n      this.setState({\n        rowsSelected: null\n      }, () => this.setState({\n        rowsSelected: undefined\n      }));\n    };\n\n    this.state = {\n      alunos: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const config = {\n      headers: {\n        Authorization: localStorage.FBidToken\n      }\n    };\n    axios.get('/listaDeAlunos', config).then(res => {\n      console.log(res.data);\n\n      for (let aluno in res.data) {\n        res.data[aluno].sexo = res.data[aluno].sexo ? 'Masculino' : 'Feminino';\n        res.data[aluno].desativado = res.data[aluno].desativado ? 'Desativado' : 'Ativo';\n        data.push(res.data[aluno]);\n      }\n\n      this.setState({\n        alunos: true,\n        loading: false\n      });\n    }).catch(err => {\n      this.setState({\n        errors: err.response.data,\n        alunos: true,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      alunos: null\n    });\n    data = [];\n  }\n\n  render() {\n    const options = {\n      selectableRows: 'single',\n      selectableRowsOnClick: true,\n      filter: false,\n      print: false,\n      download: false,\n      viewColumns: false,\n      textLabels: {\n        body: {\n          noMatch: 'Nenhum aluno encontrado',\n          toolTip: 'Ordenar'\n        },\n        pagination: {\n          next: 'Pr칩xima P치gina',\n          previous: 'P치gina Anterior',\n          rowsPerPage: 'Alunos por p치gina:',\n          displayRows: 'de'\n        },\n        toolbar: {\n          search: 'Buscar',\n          downloadCsv: 'Baixar Tabela Excel',\n          print: 'Imprimir',\n          viewColumns: 'Mostrar Colunas',\n          filterTable: 'Filtros'\n        },\n        filter: {\n          all: 'Todos',\n          title: 'FILTROS',\n          reset: 'LIMPAR'\n        },\n        viewColumns: {\n          title: 'Mostrar Colunas',\n          titleAria: 'Mostrar/Esconder Colunas'\n        },\n        selectedRows: {\n          text: 'fileira(s) selecionada(s)',\n          delete: 'Apagar',\n          deleteAria: 'Apagar fileira selecionada'\n        }\n      },\n      customToolbarSelect: (selectedRows, displayData) => React.createElement(CustomToolbarSelect, {\n        selectedRows: selectedRows,\n        flushRowsSelected: this.flushRowsSelected,\n        displayData: displayData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        height: '80vh',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      size: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(MUIDataTable, {\n      title: 'Alunos',\n      data: data,\n      columns: columns,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        marginTop: 15\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => history.push('/home'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Voltar\"))));\n  }\n\n}\n\nexport default blockAluno;","map":{"version":3,"sources":["/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/src/pages/blockAluno.js"],"names":["React","Component","axios","MUIDataTable","CircularProgress","Button","history","CustomToolbarSelect","columns","name","label","options","filter","sort","display","data","blockAluno","constructor","flushRowsSelected","setState","rowsSelected","undefined","state","alunos","loading","componentDidMount","config","headers","Authorization","localStorage","FBidToken","get","then","res","console","log","aluno","sexo","desativado","push","catch","err","errors","response","componentWillUnmount","render","selectableRows","selectableRowsOnClick","print","download","viewColumns","textLabels","body","noMatch","toolTip","pagination","next","previous","rowsPerPage","displayRows","toolbar","search","downloadCsv","filterTable","all","title","reset","titleAria","selectedRows","text","delete","deleteAria","customToolbarSelect","displayData","height","justifyContent","alignItems","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport MUIDataTable from 'mui-datatables'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Button from '@material-ui/core/Button'\nimport history from '../util/history'\nimport CustomToolbarSelect from '../components/CustomToolbarSelect'\n\nconst columns = [\n  {\n    name: 'nome',\n    label: 'Nome',\n    options: {\n      filter: true,\n      sort: true\n    }\n  },\n  {\n    name: 'matricula',\n    label: 'Matricula',\n    options: {\n      filter: true,\n      sort: true\n    }\n  },\n  {\n    name: 'cpf',\n    label: 'CPF',\n    options: {\n      filter: true,\n      sort: true\n    }\n  },\n  {\n    name: 'sexo',\n    label: 'Sexo',\n    options: {\n      filter: true,\n      sort: true\n    }\n  },\n  {\n    name: 'status',\n    label: 'Status',\n    options: {\n      filter: true,\n      sort: true\n    }\n  },\n  {\n    name: 'id',\n    label: 'Id',\n    options: {\n      filter: true,\n      sort: true,\n      display: false\n    }\n  }\n]\n\nlet data = []\n\nclass blockAluno extends Component {\n  flushRowsSelected = () => {\n    this.setState({ rowsSelected: null }, () =>\n      this.setState({ rowsSelected: undefined })\n    )\n  }\n\n  constructor() {\n    super()\n    this.state = {\n      alunos: null,\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    const config = {\n      headers: {\n        Authorization: localStorage.FBidToken\n      }\n    }\n    axios\n      .get('/listaDeAlunos', config)\n      .then(res => {\n        console.log(res.data)\n        for (let aluno in res.data) {\n          res.data[aluno].sexo = res.data[aluno].sexo ? 'Masculino' : 'Feminino'\n          res.data[aluno].desativado = res.data[aluno].desativado ? 'Desativado' : 'Ativo'\n          data.push(res.data[aluno])\n        }\n        this.setState({\n          alunos: true,\n          loading: false\n        })\n      })\n      .catch(err => {\n        this.setState({\n          errors: err.response.data,\n          alunos: true,\n          loading: false\n        })\n      })\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      alunos: null\n    })\n    data = []\n  }\n\n  render() {\n    const options = {\n      selectableRows: 'single',\n      selectableRowsOnClick: true,\n      filter: false,\n      print: false,\n      download: false,\n      viewColumns: false,\n      textLabels: {\n        body: {\n          noMatch: 'Nenhum aluno encontrado',\n          toolTip: 'Ordenar'\n        },\n        pagination: {\n          next: 'Pr칩xima P치gina',\n          previous: 'P치gina Anterior',\n          rowsPerPage: 'Alunos por p치gina:',\n          displayRows: 'de'\n        },\n        toolbar: {\n          search: 'Buscar',\n          downloadCsv: 'Baixar Tabela Excel',\n          print: 'Imprimir',\n          viewColumns: 'Mostrar Colunas',\n          filterTable: 'Filtros'\n        },\n        filter: {\n          all: 'Todos',\n          title: 'FILTROS',\n          reset: 'LIMPAR'\n        },\n        viewColumns: {\n          title: 'Mostrar Colunas',\n          titleAria: 'Mostrar/Esconder Colunas'\n        },\n        selectedRows: {\n          text: 'fileira(s) selecionada(s)',\n          delete: 'Apagar',\n          deleteAria: 'Apagar fileira selecionada'\n        }\n      },\n      customToolbarSelect: (selectedRows, displayData) => (\n        <CustomToolbarSelect\n          selectedRows={selectedRows}\n          flushRowsSelected={this.flushRowsSelected}\n          displayData={displayData}\n        />\n      )\n    }\n\n    return (\n      <div>\n        {this.state.loading ? (\n          <div\n            style={{\n              display: 'flex',\n              height: '80vh',\n              justifyContent: 'center',\n              alignItems: 'center'\n            }}\n          >\n            <CircularProgress size={100} />\n          </div>\n        ) : (\n          <div>\n            <MUIDataTable\n              title={'Alunos'}\n              data={data}\n              columns={columns}\n              options={options}\n            />\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <Button\n                style={{ marginTop: 15 }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => history.push('/home')}\n              >\n                Voltar\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default blockAluno\n"]},"metadata":{},"sourceType":"module"}