{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/src/pages/login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  title: {\n    color: '#333',\n    margin: '20px auto 20px auto'\n  },\n  textField: {\n    margin: '5px auto 5px auto'\n  },\n  button: {\n    marginTop: 15,\n    position: 'relative'\n  },\n  customError: {\n    color: 'red',\n    marginTop: 10\n  },\n  progress: {\n    position: 'absolute'\n  }\n};\nexport let auth = {\n  authenticated: false\n};\n\nclass login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post('', userData).then(res => {\n        this.setState({\n          loading: false\n        });\n        const FBidToken = \"Bearer \".concat(res.data.token);\n        localStorage.setItem('FBidToken', FBidToken);\n        axios.defaults.headers.common['Authorization'] = FBidToken;\n        auth.authenticated = true;\n        this.props.history.push('/home');\n      }).catch(err => {\n        auth.authenticated = false;\n        this.setState({\n          errors: err.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          errors = _this$state.errors,\n          loading = _this$state.loading;\n    return React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h3\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\xC1rea admistrativa\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.textField,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      value: this.state.email,\n      onChange: this.handleChange,\n      variant: \"filled\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      value: this.state.password,\n      onChange: this.handleChange,\n      variant: \"filled\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), errors.general && React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.customError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, errors.general), React.createElement(Button, {\n      className: classes.button,\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Entrar\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlogin.props = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(login);","map":{"version":3,"sources":["/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/src/pages/login.js"],"names":["React","Component","PropTypes","withStyles","Grid","Typography","TextField","Button","axios","CircularProgress","styles","form","textAlign","title","color","margin","textField","button","marginTop","position","customError","progress","auth","authenticated","login","constructor","handleSubmit","event","preventDefault","setState","loading","userData","email","state","password","post","then","res","FBidToken","data","token","localStorage","setItem","defaults","headers","common","props","history","push","catch","err","errors","response","handleChange","target","name","value","render","classes","general","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  title: {\n    color: '#333',\n    margin: '20px auto 20px auto'\n  },\n  textField: {\n    margin: '5px auto 5px auto'\n  },\n  button: {\n    marginTop: 15,\n    position: 'relative'\n  },\n  customError: {\n    color: 'red',\n    marginTop: 10\n  },\n  progress: {\n    position: 'absolute'\n  }\n}\n\nexport let auth = {\n  authenticated: false\n}\n\nclass login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      errors: {}\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({\n      loading: true\n    })\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    }\n    axios\n      .post('', userData)\n      .then(res => {\n        this.setState({\n          loading: false\n        })\n        const FBidToken = `Bearer ${res.data.token}`\n        localStorage.setItem('FBidToken', FBidToken)\n        axios.defaults.headers.common['Authorization'] = FBidToken\n        auth.authenticated = true\n        this.props.history.push('/home')\n      })\n      .catch(err => {\n        auth.authenticated = false\n        this.setState({\n          errors: err.response.data,\n          loading: false\n        })\n      })\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  render() {\n    const { classes } = this.props\n    const { errors, loading } = this.state\n    return (\n      <Grid container className={classes.form}>\n        <Grid item sm />\n        <Grid item sm>\n          <Typography variant=\"h3\" className={classes.title}>\n            Área admistrativa\n          </Typography>\n            <form noValidate onSubmit={this.handleSubmit} autoComplete=\"off\">\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                className={classes.textField}\n                helperText={errors.email}\n                error={errors.email ? true : false}\n                value={this.state.email}\n                onChange={this.handleChange}\n                variant=\"filled\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                className={classes.textField}\n                helperText={errors.password}\n                error={errors.password ? true : false}\n                value={this.state.password}\n                onChange={this.handleChange}\n                variant=\"filled\"\n                fullWidth\n              />\n              {errors.general && (\n                <Typography variant=\"body2\" className={classes.customError}>\n                  {errors.general}\n                </Typography>\n              )}\n              <Button\n                className={classes.button}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={loading}\n              >\n                Entrar\n                {loading && (\n                  <CircularProgress size={30} className={classes.progress} />\n                )}\n              </Button>\n            </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    )\n  }\n}\n\nlogin.props = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(login)\n"]},"metadata":{},"sourceType":"module"}