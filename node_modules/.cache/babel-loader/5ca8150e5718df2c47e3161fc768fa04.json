{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/src/components/CustomToolbarSelect.js\";\nimport React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BlockIcon from '@material-ui/icons/Block';\nimport { withStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nconst defaultToolbarSelectStyles = {\n  iconButton: {\n    marginRight: '24px',\n    top: '50%',\n    display: 'inline-block',\n    position: 'relative'\n  },\n  deleteIcon: {\n    color: 'primary'\n  }\n};\n\nclass CustomToolbarSelect extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDisable = () => {\n      const config = {\n        headers: {\n          Authorization: localStorage.FBidToken\n        }\n      };\n      const id = {\n        id: this.props.displayData[Number(Object.keys(this.props.selectedRows.lookup))].data[4]\n      };\n      axios.post('/blockAluno', id, config).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleDelete = () => {\n      const config = {\n        headers: {\n          Authorization: localStorage.FBidToken\n        }\n      };\n      const id = {\n        id: this.props.displayData[Number(Object.keys(this.props.selectedRows.lookup))].data[4]\n      };\n      axios.post('/deleteAluno', id, config).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: 'custom-toolbar-select',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: 'Ativar/Desativar',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.iconButton,\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(BlockIcon, {\n      className: classes.deleteIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: 'Apagar',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.iconButton,\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      className: classes.deleteIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Disagree\"), React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Agree\"))));\n  }\n\n}\n\nexport default withStyles(defaultToolbarSelectStyles, {\n  name: 'CustomToolbarSelect'\n})(CustomToolbarSelect);","map":{"version":3,"sources":["/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/src/components/CustomToolbarSelect.js"],"names":["React","Component","IconButton","Tooltip","DeleteIcon","BlockIcon","withStyles","axios","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","defaultToolbarSelectStyles","iconButton","marginRight","top","display","position","deleteIcon","color","CustomToolbarSelect","handleDisable","config","headers","Authorization","localStorage","FBidToken","id","props","displayData","Number","Object","keys","selectedRows","lookup","data","post","then","res","console","log","catch","err","handleDelete","render","classes","handleClickOpen","open","handleClose","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport BlockIcon from '@material-ui/icons/Block'\nimport { withStyles } from '@material-ui/core/styles'\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst defaultToolbarSelectStyles = {\n  iconButton: {\n    marginRight: '24px',\n    top: '50%',\n    display: 'inline-block',\n    position: 'relative'\n  },\n  deleteIcon: {\n    color: 'primary'\n  }\n}\n\nclass CustomToolbarSelect extends Component {\n  handleDisable = () => {\n    const config = {\n      headers: {\n        Authorization: localStorage.FBidToken\n      }\n    }\n\n    const id = {\n      id: this.props.displayData[\n        Number(Object.keys(this.props.selectedRows.lookup))\n      ].data[4]\n    }\n\n    axios\n      .post('/blockAluno', id, config)\n      .then(res => {\n        console.log(res.data)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  handleDelete = () => {\n    const config = {\n      headers: {\n        Authorization: localStorage.FBidToken\n      }\n    }\n\n    const id = {\n      id: this.props.displayData[\n        Number(Object.keys(this.props.selectedRows.lookup))\n      ].data[4]\n    }\n\n    axios\n      .post('/deleteAluno', id, config)\n      .then(res => {\n        console.log(res.data)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={'custom-toolbar-select'}>\n        <Tooltip title={'Ativar/Desativar'}>\n          <IconButton\n            className={classes.iconButton}\n            onClick={this.handleClickOpen}\n          >\n            <BlockIcon className={classes.deleteIcon} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={'Apagar'}>\n          <IconButton\n            className={classes.iconButton}\n            onClick={this.handleDelete}\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n          </IconButton>\n        </Tooltip>\n\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Use Google's location service?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Let Google help apps determine location. This means sending\n              anonymous location data to Google, even when no apps are running.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Disagree\n            </Button>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Agree\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\nexport default withStyles(defaultToolbarSelectStyles, {\n  name: 'CustomToolbarSelect'\n})(CustomToolbarSelect)\n"]},"metadata":{},"sourceType":"module"}