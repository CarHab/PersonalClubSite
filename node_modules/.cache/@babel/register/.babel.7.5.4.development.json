{
  "{\"sourceRoot\":\"/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/node_modules/@material-ui/codemod/lib/v4.0.0\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client\",\"filename\":\"/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/node_modules/@material-ui/codemod/lib/v4.0.0/theme-spacing-api.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassProperty\":{\"enter\":[null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/node_modules/@material-ui/codemod/lib/v4.0.0",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client",
      "filename": "/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/node_modules/@material-ui/codemod/lib/v4.0.0/theme-spacing-api.js",
      "configFile": false,
      "envName": "development",
      "root": "/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassProperty": {
              "enter": [
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/node_modules/@material-ui/codemod/lib/v4.0.0/theme-spacing-api.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/node_modules/@material-ui/codemod/lib/v4.0.0/theme-spacing-api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/node_modules/@material-ui/codemod/lib/v4.0.0",
        "sourceFileName": "theme-spacing-api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n/* eslint-disable no-eval */\n\n/**\n * Update all `theme.spacing.unit` usages to use `theme.spacing()`.\n * Find and replace string literal AST nodes to ensure all spacing API usages get updated, regardless\n * of any calculation being performed.\n * @param {jscodeshift_api_object} j\n * @param {jscodeshift_ast_object} root\n */\n\nfunction transformThemeSpacingApi(j, root) {\n  var mightContainApi = function mightContainApi(path) {\n    return j(path).find(j.MemberExpression, {\n      object: {\n        property: {\n          name: 'spacing'\n        }\n      },\n      property: {\n        name: 'unit'\n      }\n    }).size() > 0;\n  };\n\n  var replaceApi = function replaceApi(pathArg) {\n    pathArg.find(j.MemberExpression, {\n      object: {\n        property: {\n          name: 'spacing'\n        }\n      },\n      property: {\n        name: 'unit'\n      }\n    }).replaceWith(function (path) {\n      var param = null;\n      var themeParam = path.node.object.object.name;\n\n      if (j.BinaryExpression.check(path.parent.node)) {\n        var expression = path.parent.node;\n        var operation = expression.operator; // check if it's a variable\n\n        if (j.Identifier.check(expression.right)) {\n          param = expression.right;\n        } else if (j.Literal.check(expression.right)) {\n          var value = expression.right.value;\n\n          if (operation === '*' || operation === '/') {\n            param = j.literal(eval(\"1 \".concat(operation, \" \").concat(value)));\n          }\n        }\n      }\n\n      if (param) {\n        path.parent.replace(j.callExpression(j.memberExpression(j.identifier(themeParam), j.identifier('spacing')), [param]));\n        return path.node;\n      }\n\n      return j.callExpression(j.memberExpression(j.identifier(themeParam), j.identifier('spacing')), [j.literal(1)]);\n    });\n  };\n\n  var arrowFunctions = root.find(j.ArrowFunctionExpression).filter(mightContainApi);\n  var functionDeclarations = root.find(j.FunctionDeclaration).filter(mightContainApi);\n  replaceApi(arrowFunctions);\n  replaceApi(functionDeclarations);\n}\n/**\n * Update all `spacing.unit` usages to use `spacing()`.\n * Find and replace string literal AST nodes to ensure all spacing API usages get updated, regardless\n * of any calculation being performed.\n * @param {jscodeshift_api_object} j\n * @param {jscodeshift_ast_object} root\n */\n\n\nfunction transformThemeSpacingApiDestructured(j, root) {\n  var mightContainApi = function mightContainApi(path) {\n    return j(path).find(j.MemberExpression, {\n      object: {\n        name: 'spacing'\n      },\n      property: {\n        name: 'unit'\n      }\n    }).size() > 0;\n  };\n\n  var replaceApi = function replaceApi(pathArg) {\n    pathArg.find(j.MemberExpression, {\n      object: {\n        name: 'spacing'\n      },\n      property: {\n        name: 'unit'\n      }\n    }).replaceWith(function (path) {\n      var param = null;\n      var spacingParam = path.node.object.name;\n\n      if (j.BinaryExpression.check(path.parent.node)) {\n        var expression = path.parent.node;\n        var operation = expression.operator; // check if it's a variable\n\n        if (j.Identifier.check(expression.right)) {\n          param = expression.right;\n        } else if (j.Literal.check(expression.right)) {\n          var value = expression.right.value;\n\n          if (operation === '*' || operation === '/') {\n            param = j.literal(eval(\"1 \".concat(operation, \" \").concat(value)));\n          }\n        }\n      }\n\n      if (param) {\n        path.parent.replace(j.callExpression(j.identifier(spacingParam), [param]));\n        return path.node;\n      }\n\n      return j.callExpression(j.identifier(spacingParam), [j.literal(1)]);\n    });\n  };\n\n  var arrowFunctions = root.find(j.ArrowFunctionExpression).filter(mightContainApi);\n  var functionDeclarations = root.find(j.FunctionDeclaration).filter(mightContainApi);\n  replaceApi(arrowFunctions);\n  replaceApi(functionDeclarations);\n}\n\nmodule.exports = function transformer(fileInfo, api) {\n  var j = api.jscodeshift;\n  var root = j(fileInfo.source); // transforms\n\n  transformThemeSpacingApi(j, root);\n  transformThemeSpacingApiDestructured(j, root);\n  return root.toSource({\n    quote: 'single'\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "theme-spacing-api.js"
      ],
      "names": [
        "transformThemeSpacingApi",
        "j",
        "root",
        "mightContainApi",
        "path",
        "find",
        "MemberExpression",
        "object",
        "property",
        "name",
        "size",
        "replaceApi",
        "pathArg",
        "replaceWith",
        "param",
        "themeParam",
        "node",
        "BinaryExpression",
        "check",
        "parent",
        "expression",
        "operation",
        "operator",
        "Identifier",
        "right",
        "Literal",
        "value",
        "literal",
        "eval",
        "concat",
        "replace",
        "callExpression",
        "memberExpression",
        "identifier",
        "arrowFunctions",
        "ArrowFunctionExpression",
        "filter",
        "functionDeclarations",
        "FunctionDeclaration",
        "transformThemeSpacingApiDestructured",
        "spacingParam",
        "module",
        "exports",
        "transformer",
        "fileInfo",
        "api",
        "jscodeshift",
        "source",
        "toSource",
        "quote"
      ],
      "mappings": "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",
      "sourceRoot": "/home/carlos/Documents/Praxis/Personal Club/Improved Site - Client/client/node_modules/@material-ui/codemod/lib/v4.0.0",
      "sourcesContent": [
        "\"use strict\";\n\n/* eslint-disable no-eval */\n\n/**\n * Update all `theme.spacing.unit` usages to use `theme.spacing()`.\n * Find and replace string literal AST nodes to ensure all spacing API usages get updated, regardless\n * of any calculation being performed.\n * @param {jscodeshift_api_object} j\n * @param {jscodeshift_ast_object} root\n */\nfunction transformThemeSpacingApi(j, root) {\n  var mightContainApi = function mightContainApi(path) {\n    return j(path).find(j.MemberExpression, {\n      object: {\n        property: {\n          name: 'spacing'\n        }\n      },\n      property: {\n        name: 'unit'\n      }\n    }).size() > 0;\n  };\n\n  var replaceApi = function replaceApi(pathArg) {\n    pathArg.find(j.MemberExpression, {\n      object: {\n        property: {\n          name: 'spacing'\n        }\n      },\n      property: {\n        name: 'unit'\n      }\n    }).replaceWith(function (path) {\n      var param = null;\n      var themeParam = path.node.object.object.name;\n\n      if (j.BinaryExpression.check(path.parent.node)) {\n        var expression = path.parent.node;\n        var operation = expression.operator; // check if it's a variable\n\n        if (j.Identifier.check(expression.right)) {\n          param = expression.right;\n        } else if (j.Literal.check(expression.right)) {\n          var value = expression.right.value;\n\n          if (operation === '*' || operation === '/') {\n            param = j.literal(eval(\"1 \".concat(operation, \" \").concat(value)));\n          }\n        }\n      }\n\n      if (param) {\n        path.parent.replace(j.callExpression(j.memberExpression(j.identifier(themeParam), j.identifier('spacing')), [param]));\n        return path.node;\n      }\n\n      return j.callExpression(j.memberExpression(j.identifier(themeParam), j.identifier('spacing')), [j.literal(1)]);\n    });\n  };\n\n  var arrowFunctions = root.find(j.ArrowFunctionExpression).filter(mightContainApi);\n  var functionDeclarations = root.find(j.FunctionDeclaration).filter(mightContainApi);\n  replaceApi(arrowFunctions);\n  replaceApi(functionDeclarations);\n}\n/**\n * Update all `spacing.unit` usages to use `spacing()`.\n * Find and replace string literal AST nodes to ensure all spacing API usages get updated, regardless\n * of any calculation being performed.\n * @param {jscodeshift_api_object} j\n * @param {jscodeshift_ast_object} root\n */\n\n\nfunction transformThemeSpacingApiDestructured(j, root) {\n  var mightContainApi = function mightContainApi(path) {\n    return j(path).find(j.MemberExpression, {\n      object: {\n        name: 'spacing'\n      },\n      property: {\n        name: 'unit'\n      }\n    }).size() > 0;\n  };\n\n  var replaceApi = function replaceApi(pathArg) {\n    pathArg.find(j.MemberExpression, {\n      object: {\n        name: 'spacing'\n      },\n      property: {\n        name: 'unit'\n      }\n    }).replaceWith(function (path) {\n      var param = null;\n      var spacingParam = path.node.object.name;\n\n      if (j.BinaryExpression.check(path.parent.node)) {\n        var expression = path.parent.node;\n        var operation = expression.operator; // check if it's a variable\n\n        if (j.Identifier.check(expression.right)) {\n          param = expression.right;\n        } else if (j.Literal.check(expression.right)) {\n          var value = expression.right.value;\n\n          if (operation === '*' || operation === '/') {\n            param = j.literal(eval(\"1 \".concat(operation, \" \").concat(value)));\n          }\n        }\n      }\n\n      if (param) {\n        path.parent.replace(j.callExpression(j.identifier(spacingParam), [param]));\n        return path.node;\n      }\n\n      return j.callExpression(j.identifier(spacingParam), [j.literal(1)]);\n    });\n  };\n\n  var arrowFunctions = root.find(j.ArrowFunctionExpression).filter(mightContainApi);\n  var functionDeclarations = root.find(j.FunctionDeclaration).filter(mightContainApi);\n  replaceApi(arrowFunctions);\n  replaceApi(functionDeclarations);\n}\n\nmodule.exports = function transformer(fileInfo, api) {\n  var j = api.jscodeshift;\n  var root = j(fileInfo.source); // transforms\n\n  transformThemeSpacingApi(j, root);\n  transformThemeSpacingApiDestructured(j, root);\n  return root.toSource({\n    quote: 'single'\n  });\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1559579214000
  }
}